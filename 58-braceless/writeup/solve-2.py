from gmpy2 import is_prime
from Crypto.Cipher import AES

n = 1214916464338516288501167948149142743256519211076229637031265134931590935473769438356183878279717301203639260569185396270959337543262265363331166302089264111609648750564656109214818759461883629572599523141437839247189125426496909683032367542163961172053742082271140155697762173377299614919803987790924874958159
g = 106172495729060096622185723248201778671721655876118096571696623930923117659132548550734612522167946161014580288602631954933788038335277001900449182425733563
encrypted_secret = 82677182691657037535712100806179988878352144229920357478146426837543498333751875104151137683081358503152709133333987512729762564937880383088494499908393305155512664401137746411281028331148378818918817462036384532741219448667247981495633140374231840105905824349863242554524753709365959787191867089661091064685

# n = 71270627357938121169427613731859570166418837870513542999017577907357030661610994361115831344670564755720030735851928088096723645935880436767721224700765715193063354262663289683177592492573512891208777679571379086561390505560124832982480920679444154895215628547091243942647523384325862805540717345787774646981
# g = 9652045066278190602016883931654707151974695988738008779245147630083919787193868050066782956560722378274052753509330177721253458030479727445495380220521233
# encrypted_secret = 2923976012479460779892557406726536613860336130618769460852606340586829559993437576725298126409169873364922286521039957387371110037775088991142587831922198381152000507878801201709243773647625741221441154357150495454371428952052229062445123419891314083858248348635911492343546942136247673108889945957171596965

# n = 111705968353973832818508234606149067729525845227937845085818714255964836414908595027238269610933122228114056305722544166719027724462365390634560795071878370149737089655291471122160390093749277734373689942846132543726129688825781019852408593545390319079559732309831555934709464996223239329716063522638993909103
# g = 9281470891882358824108862730621610461051064830072676230462475374418972192201893065024512733092131837624019189417214612773082103910005802323228580600395151
# encrypted_secret = 66069941100685158309976888578763121198611806324339831611910594655040473011972715545432395375284048754175491172805279772367458186397448045559658319619927274257185232311650868339228535368051368050185644112667156396418246977643880932994725678514450228134233567396561661080952750291789754195432708923791672893965

# n = 144890504258495109301341768479626231928920741538533657389795212382122561811829522345982185311957346329991805238333850776938198675125799848440701394574776147581862298073576466336690399762404360800593148450620810605429451383794072369706329732932762453601699468847975388335782021623272681272216641859984231113526
# g = 18562941783764717648217725461243220922102129660145352460924950748837944384403786130049025466184263675248038378834429225546164207820011604646457161200790302
# encrypted_secret = 31851641501733417897040807065402305014767430237427628133753676989377906881773788560362087951532510406050924630098827699194362392686944429664084414460186114458343426653438482706240417944942510972546036269139714193106659736062711173576696163108070928597652533315454278813262464868139742379698878691485191443569

g //= 11
n //= 11

assert is_prime(n//g)
assert is_prime(g)

p, q = g, n//g
phi_n = (p-1) * (q-1)

d = pow(65537, -1, phi_n)
key = pow(encrypted_secret, d, n)
key = int.to_bytes(key, 32, 'big')

cipher = AES.new(key, AES.MODE_CBC, b'\0'*16)

c = bytes.fromhex('bc9bbac8419719a410d6ea03e2866446193658bab48693be8ae7002de34e47ca033da4e9d9ca11f85e9ccabbf03028b347e465c50dfbd47fcbaf5889a332d709')
print(cipher.decrypt(c))